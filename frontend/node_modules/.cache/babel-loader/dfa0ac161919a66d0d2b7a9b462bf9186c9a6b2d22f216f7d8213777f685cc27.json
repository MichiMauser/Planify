{"ast":null,"code":"var _jsxFileName = \"E:\\\\AN3\\\\SEM2\\\\project-MichiMauser\\\\frontend\\\\src\\\\pages\\\\webSocket\\\\WebSocketMsg.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Button, Form, Dropdown, Alert, ListGroup, Container, Row, Col } from 'react-bootstrap';\nimport SockJS from 'sockjs-client';\nimport { Client } from '@stomp/stompjs';\nimport axios from 'axios';\nimport NavBar from \"../../components/Navbar\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction GroupChatApp() {\n  _s();\n  const [groups, setGroups] = useState([]);\n  const [selectedGroup, setSelectedGroup] = useState('');\n  const [message, setMessage] = useState('');\n  const [inputValue, setInputValue] = useState('');\n  const [notifications, setNotifications] = useState([]);\n  const [stompClient, setStompClient] = useState(null);\n\n  // Fetch available groups\n  // useEffect(() => {\n  //     const fetchGroups = async () => {\n  //         try {\n  //             const response = await axios.get('http://localhost:8080/group');\n  //             console.log(response.data);\n  //             setGroups(response.data.map(g => g.name)); // Optional: update state\n  //         } catch (err) {\n  //             console.error('GET /group failed:', err);\n  //         }\n  //     };\n\n  //     fetchGroups();\n  // }, []);\n\n  // // Initialize WebSocket\n  // useEffect(() => {\n  //     const socket = new SockJS('http://localhost:8080/socket');\n  //     const client = new Client({\n  //         webSocketFactory: () => socket,\n  //         debug: console.log,\n  //         onConnect: () => console.log('WebSocket connected'),\n  //     });\n\n  //     client.activate();\n  //     setStompClient(client);\n\n  //     return () => client.deactivate();\n  // }, []);\n\n  // Subscribe to group topic when selectedGroup changes\n  // useEffect(() => {\n  //     if (!stompClient || !selectedGroup) return;\n\n  //     const subscription = stompClient.subscribe(`/topic/group/${selectedGroup}`, (msg) => {\n  //         const parsed = JSON.parse(msg.body);\n  //         setMessage(parsed.message);\n  //         setNotifications(prev => [...prev, parsed.message]);\n  //     });\n\n  //     return () => subscription.unsubscribe();\n  // }, [selectedGroup, stompClient]);\n\n  // const handleSend = () => {\n  //     if (!inputValue.trim() || !selectedGroup) return;\n\n  //     axios.post(`http://localhost:8080/group/${selectedGroup}/message`, {\n  //         message: inputValue\n  //     })\n  //     .then(() => setInputValue(''))\n  //     .catch(err => console.error('Sending error:', err));\n  // };\n\n  // const handleCreateGroup = async(e) => {\n  //     e.preventDefault();\n  //     if (!inputValue.trim()) return;\n\n  //     // axios.post('http://localhost:8080/group/create', { name: inputValue })\n  //     //     .then(res => {\n  //     //         setGroups(prev => [...prev, inputValue]);\n  //     //         setSelectedGroup(inputValue);\n  //     //         setInputValue('');\n  //     //     })\n  //     //     .catch(err => console.error('Create group error:', err));\n  //     const response = await axios.post(\"http://localhost:8080/group/create\",{})\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Group Chat App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Dropdown, {\n            onSelect: setSelectedGroup,\n            children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n              variant: \"primary\",\n              children: selectedGroup || 'Select Group'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n              children: groups.map((g, i) => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                eventKey: g,\n                children: g\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 33\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 6\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this), selectedGroup && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"info\",\n          children: [\"Latest message: \", message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          className: \"d-flex mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter message\",\n            value: inputValue,\n            onChange: e => setInputValue(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n        children: notifications.map((note, i) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: note\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n_s(GroupChatApp, \"DaxoU0RJjX4Ub3olpjYlFvgSW4Q=\");\n_c = GroupChatApp;\nexport default GroupChatApp;\nvar _c;\n$RefreshReg$(_c, \"GroupChatApp\");","map":{"version":3,"names":["React","useEffect","useState","Button","Form","Dropdown","Alert","ListGroup","Container","Row","Col","SockJS","Client","axios","NavBar","jsxDEV","_jsxDEV","Fragment","_Fragment","GroupChatApp","_s","groups","setGroups","selectedGroup","setSelectedGroup","message","setMessage","inputValue","setInputValue","notifications","setNotifications","stompClient","setStompClient","children","fileName","_jsxFileName","lineNumber","columnNumber","className","md","onSelect","Toggle","variant","Menu","map","g","i","Item","eventKey","Control","type","placeholder","value","onChange","e","target","note","_c","$RefreshReg$"],"sources":["E:/AN3/SEM2/project-MichiMauser/frontend/src/pages/webSocket/WebSocketMsg.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Button, Form, Dropdown, Alert, ListGroup, Container, Row, Col } from 'react-bootstrap';\r\nimport SockJS from 'sockjs-client';\r\nimport { Client } from '@stomp/stompjs';\r\nimport axios from 'axios';\r\nimport NavBar from \"../../components/Navbar\"\r\nfunction GroupChatApp() {\r\n    const [groups, setGroups] = useState([]);\r\n    const [selectedGroup, setSelectedGroup] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [notifications, setNotifications] = useState([]);\r\n    const [stompClient, setStompClient] = useState(null);\r\n\r\n    // Fetch available groups\r\n    // useEffect(() => {\r\n    //     const fetchGroups = async () => {\r\n    //         try {\r\n    //             const response = await axios.get('http://localhost:8080/group');\r\n    //             console.log(response.data);\r\n    //             setGroups(response.data.map(g => g.name)); // Optional: update state\r\n    //         } catch (err) {\r\n    //             console.error('GET /group failed:', err);\r\n    //         }\r\n    //     };\r\n    \r\n    //     fetchGroups();\r\n    // }, []);\r\n\r\n    // // Initialize WebSocket\r\n    // useEffect(() => {\r\n    //     const socket = new SockJS('http://localhost:8080/socket');\r\n    //     const client = new Client({\r\n    //         webSocketFactory: () => socket,\r\n    //         debug: console.log,\r\n    //         onConnect: () => console.log('WebSocket connected'),\r\n    //     });\r\n\r\n    //     client.activate();\r\n    //     setStompClient(client);\r\n\r\n    //     return () => client.deactivate();\r\n    // }, []);\r\n\r\n    // Subscribe to group topic when selectedGroup changes\r\n    // useEffect(() => {\r\n    //     if (!stompClient || !selectedGroup) return;\r\n\r\n    //     const subscription = stompClient.subscribe(`/topic/group/${selectedGroup}`, (msg) => {\r\n    //         const parsed = JSON.parse(msg.body);\r\n    //         setMessage(parsed.message);\r\n    //         setNotifications(prev => [...prev, parsed.message]);\r\n    //     });\r\n\r\n    //     return () => subscription.unsubscribe();\r\n    // }, [selectedGroup, stompClient]);\r\n\r\n    // const handleSend = () => {\r\n    //     if (!inputValue.trim() || !selectedGroup) return;\r\n\r\n    //     axios.post(`http://localhost:8080/group/${selectedGroup}/message`, {\r\n    //         message: inputValue\r\n    //     })\r\n    //     .then(() => setInputValue(''))\r\n    //     .catch(err => console.error('Sending error:', err));\r\n    // };\r\n\r\n    // const handleCreateGroup = async(e) => {\r\n    //     e.preventDefault();\r\n    //     if (!inputValue.trim()) return;\r\n\r\n    //     // axios.post('http://localhost:8080/group/create', { name: inputValue })\r\n    //     //     .then(res => {\r\n    //     //         setGroups(prev => [...prev, inputValue]);\r\n    //     //         setSelectedGroup(inputValue);\r\n    //     //         setInputValue('');\r\n    //     //     })\r\n    //     //     .catch(err => console.error('Create group error:', err));\r\n    //     const response = await axios.post(\"http://localhost:8080/group/create\",{})\r\n    // };\r\n\r\n    return (\r\n        <div>\r\n        <NavBar/>\r\n        <Container className=\"mt-4\">\r\n            <h3>Group Chat App</h3>\r\n\r\n            {/* Group Selector */}\r\n            <Row className=\"mb-3\">\r\n                <Col md={6}>\r\n                    <Dropdown onSelect={setSelectedGroup}>\r\n                        <Dropdown.Toggle variant=\"primary\">\r\n                            {selectedGroup || 'Select Group'}\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            {groups.map((g, i) => (\r\n                                <Dropdown.Item key={i} eventKey={g}>{g}</Dropdown.Item>\r\n                            ))}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </Col>\r\n\r\n                {/* Create Group */}\r\n                <Col md={6}>\r\n                    {/* <Form onSubmit={handleCreateGroup}>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Create new group\"\r\n                            value={inputValue}\r\n                            onChange={e => setInputValue(e.target.value)}\r\n                        />\r\n                        <Button type=\"submit\" className=\"mt-2\">Create Group</Button>\r\n                    </Form> */}\r\n                </Col>\r\n            </Row>\r\n\r\n            {/* Messaging */}\r\n            {selectedGroup && (\r\n                <>\r\n                    <Alert variant=\"info\">Latest message: {message}</Alert>\r\n\r\n                    <Form className=\"d-flex mb-3\">\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Enter message\"\r\n                            value={inputValue}\r\n                            onChange={e => setInputValue(e.target.value)}\r\n                        />\r\n                        {/* <Button onClick={handleSend} className=\"ms-2\">Send</Button> */}\r\n                    </Form>\r\n                </>\r\n            )}\r\n\r\n            {/* Notifications */}\r\n            <h5>Notifications</h5>\r\n            <ListGroup>\r\n                {notifications.map((note, i) => (\r\n                    <ListGroup.Item key={i}>{note}</ListGroup.Item>\r\n                ))}\r\n            </ListGroup>\r\n        </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GroupChatApp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}