{"ast":null,"code":"var _jsxFileName = \"E:\\\\AN3\\\\SEM2\\\\project-MichiMauser\\\\frontend\\\\src\\\\pages\\\\webSocket\\\\WebSocketMsg.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState, useRef } from 'react';\nimport { Button, Form, Dropdown, ListGroup, Container, Row, Col, Alert } from 'react-bootstrap';\nimport axios from 'axios';\nimport SockJS from 'sockjs-client';\nimport { Stomp } from '@stomp/stompjs';\nimport NavBar from \"../../components/Navbar\";\nimport { LoggedUserContext } from '../../context/LoggedUserContext';\nimport \"../../styles/\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GroupChatApp() {\n  _s();\n  const [groups, setGroups] = useState([]);\n  const [selectedGroup, setSelectedGroup] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [notifications, setNotifications] = useState([]);\n  const [unreadNotifications, setUnreadNotifications] = useState(0);\n  const {\n    loggedUser\n  } = useContext(LoggedUserContext);\n  const stompClient = useRef(null);\n  const [isConnected, setIsConnected] = useState(false);\n\n  // Fetch groups function\n  const fetchGroups = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/group');\n      setGroups(response.data);\n    } catch (err) {\n      console.error('GET /group failed:', err);\n    }\n  };\n\n  // WebSocket connection setup\n  useEffect(() => {\n    const socket = new SockJS('http://localhost:8080/socket');\n    stompClient.current = Stomp.over(socket);\n    stompClient.current.connect({}, frame => {\n      console.log('Connected to WebSocket:', frame);\n      setIsConnected(true);\n\n      // Subscribe to notifications\n      stompClient.current.subscribe('/topic/notifications', message => {\n        const notification = JSON.parse(message.body);\n        handleWebSocketNotification(notification);\n      });\n    }, error => {\n      console.error('WebSocket connection error:', error);\n      setIsConnected(false);\n    });\n    return () => {\n      if (stompClient.current) {\n        stompClient.current.disconnect();\n      }\n    };\n  }, []);\n\n  // Handle incoming WebSocket notifications\n  const handleWebSocketNotification = notification => {\n    if (notification.type === 'NEW_MESSAGE') {\n      const currentUser = `${loggedUser.firstName} ${loggedUser.lastName}`;\n\n      // Don't show notification for your own messages\n      if (notification.sender === currentUser) {\n        return;\n      }\n\n      // If user is not viewing this group, show notification\n      if (!selectedGroup || selectedGroup !== notification.groupName) {\n        const newNotification = {\n          id: Date.now(),\n          type: 'message',\n          groupName: notification.groupName,\n          groupId: notification.groupId,\n          sender: notification.sender,\n          message: notification.message,\n          timestamp: new Date(notification.timestamp),\n          read: false\n        };\n        setNotifications(prev => [newNotification, ...prev].slice(0, 10)); // Keep only 10 latest\n        setUnreadNotifications(prev => prev + 1);\n\n        // Auto-remove notification after 10 seconds\n        setTimeout(() => {\n          removeNotification(newNotification.id);\n        }, 10000);\n      }\n    }\n  };\n\n  // Remove notification\n  const removeNotification = notificationId => {\n    setNotifications(prev => {\n      const notification = prev.find(n => n.id === notificationId);\n      if (notification && !notification.read) {\n        setUnreadNotifications(count => Math.max(0, count - 1));\n      }\n      return prev.filter(n => n.id !== notificationId);\n    });\n  };\n\n  // Mark notification as read\n  const markNotificationAsRead = notificationId => {\n    setNotifications(prev => prev.map(n => {\n      if (n.id === notificationId && !n.read) {\n        setUnreadNotifications(count => Math.max(0, count - 1));\n        return {\n          ...n,\n          read: true\n        };\n      }\n      return n;\n    }));\n  };\n\n  // Switch to group from notification\n  const switchToGroupFromNotification = (groupName, notificationId) => {\n    setSelectedGroup(groupName);\n    markNotificationAsRead(notificationId);\n  };\n  useEffect(() => {\n    fetchGroups();\n  }, []);\n\n  // Poll messages every 2 seconds\n  useEffect(() => {\n    if (!selectedGroup) return;\n    const group = groups.find(g => g.name === selectedGroup);\n    if (!group) return;\n    const fetchMessages = async () => {\n      try {\n        const res = await axios.get(`http://localhost:8080/message/${group.id}`);\n        setMessages(res.data);\n      } catch (err) {\n        console.error('Polling error:', err);\n      }\n    };\n    fetchMessages(); // Initial fetch\n\n    const interval = setInterval(fetchMessages, 2000);\n    return () => clearInterval(interval); // Cleanup\n  }, [selectedGroup, groups]);\n  const handleSend = async () => {\n    if (!inputValue.trim() || !selectedGroup) return;\n    const group = groups.find(g => g.name === selectedGroup);\n    if (!group) {\n      console.error(\"Selected group not found\");\n      return;\n    }\n    const messagePayload = {\n      sender: `${loggedUser.firstName} ${loggedUser.lastName}`,\n      message: inputValue\n    };\n    try {\n      await axios.post(`http://localhost:8080/message/post?groupChatId=${group.id}`, messagePayload);\n      const response = await axios.get(`http://localhost:8080/message/${group.id}`);\n      setMessages(response.data);\n      setInputValue('');\n    } catch (err) {\n      console.error('Sending message failed:', err);\n    }\n  };\n  const handleCreateGroup = async e => {\n    e.preventDefault();\n    if (!inputValue.trim()) return;\n    try {\n      await axios.post('http://localhost:8080/group/create', {\n        name: inputValue\n      });\n      await fetchGroups();\n      setSelectedGroup(inputValue);\n      setInputValue('');\n    } catch (err) {\n      console.error('Create group error:', err);\n    }\n  };\n\n  // Helper function to display message text reliably\n  const getMessageText = msg => {\n    return msg.content || msg.text || msg.message || '[No message]';\n  };\n\n  // Helper function to format timestamp\n  const formatTimestamp = timestamp => {\n    if (!timestamp) return '';\n    const date = new Date(timestamp);\n    const now = new Date();\n    const isToday = date.toDateString() === now.toDateString();\n    if (isToday) {\n      return date.toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    } else {\n      return date.toLocaleString([], {\n        month: 'short',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"group-chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-main-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-between align-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"chat-header\",\n            children: \"\\uD83D\\uDCAC Group Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"connection-status\",\n            children: isConnected ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-success\",\n              children: \"\\uD83D\\uDFE2 Connected\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-danger\",\n              children: \"\\uD83D\\uDD34 Disconnected\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this), notifications.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notifications-bar mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between align-items-center mb-2\",\n            children: /*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"mb-0\",\n              children: [\"\\uD83D\\uDD14 Live Notifications\", unreadNotifications > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"badge bg-danger ms-2\",\n                children: unreadNotifications\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notifications-list\",\n            children: [notifications.slice(0, 3).map(notification => /*#__PURE__*/_jsxDEV(Alert, {\n              variant: notification.read ? \"secondary\" : \"info\",\n              className: \"notification-alert mb-2\",\n              dismissible: true,\n              onClose: () => removeNotification(notification.id),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex justify-content-between align-items-start\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"notification-content flex-grow-1\",\n                  style: {\n                    cursor: 'pointer'\n                  },\n                  onClick: () => switchToGroupFromNotification(notification.groupName, notification.id),\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: notification.sender\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 49\n                  }, this), \" in \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: notification.groupName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 91\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 254,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                    children: notification.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  className: \"text-muted ms-2\",\n                  children: formatTimestamp(notification.timestamp)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 41\n              }, this)\n            }, notification.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 37\n            }, this)), notifications.length > 3 && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-muted\",\n              children: [\"+\", notifications.length - 3, \" more notifications...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group-controls\",\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"group-dropdown\",\n                children: /*#__PURE__*/_jsxDEV(Dropdown, {\n                  onSelect: setSelectedGroup,\n                  children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n                    className: \"w-100\",\n                    children: selectedGroup || 'Select Group'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n                    children: groups.map((g, i) => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                      eventKey: g.name,\n                      children: g.name\n                    }, i, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 282,\n                      columnNumber: 49\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                onSubmit: handleCreateGroup,\n                className: \"create-group-form\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  placeholder: \"Create new group...\",\n                  value: inputValue,\n                  onChange: e => setInputValue(e.target.value),\n                  className: \"create-group-input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  className: \"create-group-btn\",\n                  children: \"\\u2728 Create Group\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 21\n        }, this), selectedGroup ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"chat-title\",\n            children: [\"\\uD83D\\uDCE8 Messages in \", selectedGroup]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n            className: \"messages-container\",\n            children: messages.length > 0 ? messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              className: \"message-item\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-text\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"message-sender\",\n                    children: msg.sender || 'Unknown'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 314,\n                    columnNumber: 49\n                  }, this), getMessageText(msg)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"message-timestamp\",\n                  children: formatTimestamp(msg.timestamp)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 41\n              }, this)\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 37\n            }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"empty-state\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"empty-state-icon\",\n                children: \"\\uD83D\\uDCAD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"No messages yet. Start the conversation!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            className: \"message-input-form\",\n            onSubmit: e => {\n              e.preventDefault();\n              handleSend();\n            },\n            children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Type your message...\",\n              value: inputValue,\n              onChange: e => setInputValue(e.target.value),\n              className: \"message-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              className: \"send-btn\",\n              children: \"Send \\uD83D\\uDE80\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-state\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-state-icon\",\n            children: \"\\uD83D\\uDC46\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Select a group to start chatting!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 9\n  }, this);\n}\n_s(GroupChatApp, \"j3uRcExS5LQDfzJufDHtYJGKUEs=\");\n_c = GroupChatApp;\nexport default GroupChatApp;\nvar _c;\n$RefreshReg$(_c, \"GroupChatApp\");","map":{"version":3,"names":["React","useContext","useEffect","useState","useRef","Button","Form","Dropdown","ListGroup","Container","Row","Col","Alert","axios","SockJS","Stomp","NavBar","LoggedUserContext","jsxDEV","_jsxDEV","GroupChatApp","_s","groups","setGroups","selectedGroup","setSelectedGroup","messages","setMessages","inputValue","setInputValue","notifications","setNotifications","unreadNotifications","setUnreadNotifications","loggedUser","stompClient","isConnected","setIsConnected","fetchGroups","response","get","data","err","console","error","socket","current","over","connect","frame","log","subscribe","message","notification","JSON","parse","body","handleWebSocketNotification","disconnect","type","currentUser","firstName","lastName","sender","groupName","newNotification","id","Date","now","groupId","timestamp","read","prev","slice","setTimeout","removeNotification","notificationId","find","n","count","Math","max","filter","markNotificationAsRead","map","switchToGroupFromNotification","group","g","name","fetchMessages","res","interval","setInterval","clearInterval","handleSend","trim","messagePayload","post","handleCreateGroup","e","preventDefault","getMessageText","msg","content","text","formatTimestamp","date","isToday","toDateString","toLocaleTimeString","hour","minute","toLocaleString","month","day","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","variant","dismissible","onClose","style","cursor","onClick","md","onSelect","Toggle","Menu","i","Item","eventKey","onSubmit","Control","placeholder","value","onChange","target","idx","_c","$RefreshReg$"],"sources":["E:/AN3/SEM2/project-MichiMauser/frontend/src/pages/webSocket/WebSocketMsg.js"],"sourcesContent":["import React, { useContext, useEffect, useState, useRef } from 'react';\r\nimport { Button, Form, Dropdown, ListGroup, Container, Row, Col, Alert } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport SockJS from 'sockjs-client';\r\nimport { Stomp } from '@stomp/stompjs';\r\nimport NavBar from \"../../components/Navbar\";\r\nimport { LoggedUserContext } from '../../context/LoggedUserContext';\r\nimport \"../../styles/\"\r\n\r\nfunction GroupChatApp() {\r\n    const [groups, setGroups] = useState([]);\r\n    const [selectedGroup, setSelectedGroup] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [notifications, setNotifications] = useState([]);\r\n    const [unreadNotifications, setUnreadNotifications] = useState(0);\r\n    const {loggedUser} = useContext(LoggedUserContext);\r\n    const stompClient = useRef(null);\r\n    const [isConnected, setIsConnected] = useState(false);\r\n\r\n    // Fetch groups function\r\n    const fetchGroups = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:8080/group');\r\n            setGroups(response.data);\r\n        } catch (err) {\r\n            console.error('GET /group failed:', err);\r\n        }\r\n    };\r\n\r\n    // WebSocket connection setup\r\n    useEffect(() => {\r\n        const socket = new SockJS('http://localhost:8080/socket');\r\n        stompClient.current = Stomp.over(socket);\r\n        \r\n        stompClient.current.connect({}, (frame) => {\r\n            console.log('Connected to WebSocket:', frame);\r\n            setIsConnected(true);\r\n            \r\n            // Subscribe to notifications\r\n            stompClient.current.subscribe('/topic/notifications', (message) => {\r\n                const notification = JSON.parse(message.body);\r\n                handleWebSocketNotification(notification);\r\n            });\r\n        }, (error) => {\r\n            console.error('WebSocket connection error:', error);\r\n            setIsConnected(false);\r\n        });\r\n\r\n        return () => {\r\n            if (stompClient.current) {\r\n                stompClient.current.disconnect();\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    // Handle incoming WebSocket notifications\r\n    const handleWebSocketNotification = (notification) => {\r\n        if (notification.type === 'NEW_MESSAGE') {\r\n            const currentUser = `${loggedUser.firstName} ${loggedUser.lastName}`;\r\n            \r\n            // Don't show notification for your own messages\r\n            if (notification.sender === currentUser) {\r\n                return;\r\n            }\r\n            \r\n            // If user is not viewing this group, show notification\r\n            if (!selectedGroup || selectedGroup !== notification.groupName) {\r\n                const newNotification = {\r\n                    id: Date.now(),\r\n                    type: 'message',\r\n                    groupName: notification.groupName,\r\n                    groupId: notification.groupId,\r\n                    sender: notification.sender,\r\n                    message: notification.message,\r\n                    timestamp: new Date(notification.timestamp),\r\n                    read: false\r\n                };\r\n                \r\n                setNotifications(prev => [newNotification, ...prev].slice(0, 10)); // Keep only 10 latest\r\n                setUnreadNotifications(prev => prev + 1);\r\n                \r\n                // Auto-remove notification after 10 seconds\r\n                setTimeout(() => {\r\n                    removeNotification(newNotification.id);\r\n                }, 10000);\r\n            }\r\n        }\r\n    };\r\n\r\n    // Remove notification\r\n    const removeNotification = (notificationId) => {\r\n        setNotifications(prev => {\r\n            const notification = prev.find(n => n.id === notificationId);\r\n            if (notification && !notification.read) {\r\n                setUnreadNotifications(count => Math.max(0, count - 1));\r\n            }\r\n            return prev.filter(n => n.id !== notificationId);\r\n        });\r\n    };\r\n\r\n    // Mark notification as read\r\n    const markNotificationAsRead = (notificationId) => {\r\n        setNotifications(prev => prev.map(n => {\r\n            if (n.id === notificationId && !n.read) {\r\n                setUnreadNotifications(count => Math.max(0, count - 1));\r\n                return { ...n, read: true };\r\n            }\r\n            return n;\r\n        }));\r\n    };\r\n\r\n    // Switch to group from notification\r\n    const switchToGroupFromNotification = (groupName, notificationId) => {\r\n        setSelectedGroup(groupName);\r\n        markNotificationAsRead(notificationId);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchGroups();\r\n    }, []);\r\n\r\n    // Poll messages every 2 seconds\r\n    useEffect(() => {\r\n        if (!selectedGroup) return;\r\n\r\n        const group = groups.find(g => g.name === selectedGroup);\r\n        if (!group) return;\r\n\r\n        const fetchMessages = async () => {\r\n            try {\r\n                const res = await axios.get(`http://localhost:8080/message/${group.id}`);\r\n                setMessages(res.data);\r\n            } catch (err) {\r\n                console.error('Polling error:', err);\r\n            }\r\n        };\r\n\r\n        fetchMessages(); // Initial fetch\r\n\r\n        const interval = setInterval(fetchMessages, 2000);\r\n\r\n        return () => clearInterval(interval); // Cleanup\r\n    }, [selectedGroup, groups]);\r\n\r\n    const handleSend = async () => {\r\n        if (!inputValue.trim() || !selectedGroup) return;\r\n\r\n        const group = groups.find(g => g.name === selectedGroup);\r\n        if (!group) {\r\n            console.error(\"Selected group not found\");\r\n            return;\r\n        }\r\n\r\n        const messagePayload = {\r\n            sender: `${loggedUser.firstName} ${loggedUser.lastName}`,\r\n            message: inputValue\r\n        };\r\n\r\n        try {\r\n            await axios.post(`http://localhost:8080/message/post?groupChatId=${group.id}`, messagePayload);\r\n\r\n            const response = await axios.get(`http://localhost:8080/message/${group.id}`);\r\n            setMessages(response.data);\r\n            setInputValue('');\r\n        } catch (err) {\r\n            console.error('Sending message failed:', err);\r\n        }\r\n    };\r\n\r\n    const handleCreateGroup = async (e) => {\r\n        e.preventDefault();\r\n        if (!inputValue.trim()) return;\r\n\r\n        try {\r\n            await axios.post('http://localhost:8080/group/create', { name: inputValue });\r\n            \r\n            await fetchGroups();\r\n            setSelectedGroup(inputValue);\r\n            setInputValue('');\r\n        } catch (err) {\r\n            console.error('Create group error:', err);\r\n        }\r\n    };\r\n\r\n    // Helper function to display message text reliably\r\n    const getMessageText = (msg) => {\r\n        return msg.content || msg.text || msg.message || '[No message]';\r\n    };\r\n\r\n    // Helper function to format timestamp\r\n    const formatTimestamp = (timestamp) => {\r\n        if (!timestamp) return '';\r\n        \r\n        const date = new Date(timestamp);\r\n        const now = new Date();\r\n        const isToday = date.toDateString() === now.toDateString();\r\n        \r\n        if (isToday) {\r\n            return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n        } else {\r\n            return date.toLocaleString([], { \r\n                month: 'short', \r\n                day: 'numeric', \r\n                hour: '2-digit', \r\n                minute: '2-digit' \r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"group-chat-container\">\r\n            <NavBar />\r\n            <Container>\r\n                <div className=\"chat-main-card\">\r\n                    <div className=\"d-flex justify-content-between align-items-center\">\r\n                        <h3 className=\"chat-header\">💬 Group Chat</h3>\r\n                        <div className=\"connection-status\">\r\n                            {isConnected ? (\r\n                                <span className=\"text-success\">🟢 Connected</span>\r\n                            ) : (\r\n                                <span className=\"text-danger\">🔴 Disconnected</span>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Real-time Notifications Bar */}\r\n                    {notifications.length > 0 && (\r\n                        <div className=\"notifications-bar mb-3\">\r\n                            <div className=\"d-flex justify-content-between align-items-center mb-2\">\r\n                                <h6 className=\"mb-0\">\r\n                                    🔔 Live Notifications \r\n                                    {unreadNotifications > 0 && (\r\n                                        <span className=\"badge bg-danger ms-2\">{unreadNotifications}</span>\r\n                                    )}\r\n                                </h6>\r\n                            </div>\r\n                            <div className=\"notifications-list\">\r\n                                {notifications.slice(0, 3).map((notification) => (\r\n                                    <Alert \r\n                                        key={notification.id}\r\n                                        variant={notification.read ? \"secondary\" : \"info\"}\r\n                                        className=\"notification-alert mb-2\"\r\n                                        dismissible\r\n                                        onClose={() => removeNotification(notification.id)}\r\n                                    >\r\n                                        <div className=\"d-flex justify-content-between align-items-start\">\r\n                                            <div \r\n                                                className=\"notification-content flex-grow-1\"\r\n                                                style={{ cursor: 'pointer' }}\r\n                                                onClick={() => switchToGroupFromNotification(notification.groupName, notification.id)}\r\n                                            >\r\n                                                <strong>{notification.sender}</strong> in <strong>{notification.groupName}</strong>\r\n                                                <br />\r\n                                                <small>{notification.message}</small>\r\n                                            </div>\r\n                                            <small className=\"text-muted ms-2\">\r\n                                                {formatTimestamp(notification.timestamp)}\r\n                                            </small>\r\n                                        </div>\r\n                                    </Alert>\r\n                                ))}\r\n                                {notifications.length > 3 && (\r\n                                    <small className=\"text-muted\">\r\n                                        +{notifications.length - 3} more notifications...\r\n                                    </small>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    <div className=\"group-controls\">\r\n                        <Row>\r\n                            <Col md={6}>\r\n                                <div className=\"group-dropdown\">\r\n                                    <Dropdown onSelect={setSelectedGroup}>\r\n                                        <Dropdown.Toggle className=\"w-100\">\r\n                                            {selectedGroup || 'Select Group'}\r\n                                        </Dropdown.Toggle>\r\n                                        <Dropdown.Menu>\r\n                                            {groups.map((g, i) => (\r\n                                                <Dropdown.Item key={i} eventKey={g.name}>{g.name}</Dropdown.Item>\r\n                                            ))}\r\n                                        </Dropdown.Menu>\r\n                                    </Dropdown>\r\n                                </div>\r\n                            </Col>\r\n\r\n                            <Col md={6}>\r\n                                <Form onSubmit={handleCreateGroup} className=\"create-group-form\">\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        placeholder=\"Create new group...\"\r\n                                        value={inputValue}\r\n                                        onChange={e => setInputValue(e.target.value)}\r\n                                        className=\"create-group-input\"\r\n                                    />\r\n                                    <Button type=\"submit\" className=\"create-group-btn\">\r\n                                        ✨ Create Group\r\n                                    </Button>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n\r\n                    {selectedGroup ? (\r\n                        <div className=\"chat-section\">\r\n                            <h5 className=\"chat-title\">📨 Messages in {selectedGroup}</h5>\r\n                            <ListGroup className=\"messages-container\">\r\n                                {messages.length > 0 ? messages.map((msg, idx) => (\r\n                                    <ListGroup.Item key={idx} className=\"message-item\">\r\n                                        <div className=\"message-content\">\r\n                                            <div className=\"message-text\">\r\n                                                <span className=\"message-sender\">{msg.sender || 'Unknown'}</span>\r\n                                                {getMessageText(msg)}\r\n                                            </div>\r\n                                            <span className=\"message-timestamp\">\r\n                                                {formatTimestamp(msg.timestamp)}\r\n                                            </span>\r\n                                        </div>\r\n                                    </ListGroup.Item>\r\n                                )) : (\r\n                                    <div className=\"empty-state\">\r\n                                        <div className=\"empty-state-icon\">💭</div>\r\n                                        <p>No messages yet. Start the conversation!</p>\r\n                                    </div>\r\n                                )}\r\n                            </ListGroup>\r\n\r\n                            <Form className=\"message-input-form\" onSubmit={e => { e.preventDefault(); handleSend(); }}>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Type your message...\"\r\n                                    value={inputValue}\r\n                                    onChange={e => setInputValue(e.target.value)}\r\n                                    className=\"message-input\"\r\n                                />\r\n                                <Button type=\"submit\" className=\"send-btn\">\r\n                                    Send 🚀\r\n                                </Button>\r\n                            </Form>\r\n                        </div>\r\n                    ) : (\r\n                        <div className=\"empty-state\">\r\n                            <div className=\"empty-state-icon\">👆</div>\r\n                            <p>Select a group to start chatting!</p>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GroupChatApp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}