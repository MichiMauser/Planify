{"ast":null,"code":"var _jsxFileName = \"E:\\\\AN3\\\\SEM2\\\\project-MichiMauser\\\\frontend\\\\src\\\\components\\\\modals\\\\userViewModal.jsx\",\n  _s2 = $RefreshSig$();\nimport { useContext, useState } from 'react';\nimport { UserContext } from '../../pages/Home/AdminBoard';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Card from 'react-bootstrap/Card';\nimport Stack from 'react-bootstrap/Stack';\nimport { useSwipeable } from 'react-swipeable'; // Importing useSwipeable hook for swipe gestures\n\nimport \"../../styles/NotebookView.css\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserViewModal(props) {\n  _s2();\n  var _s = $RefreshSig$();\n  const {\n    viewUser,\n    notebook,\n    setNotebooks\n  } = useContext(UserContext);\n  const [swipingState, setSwipingState] = useState({}); // To hold the swipe state for each notebook\n\n  // Async function to handle notebook deletion\n  const handleDeleteNotebook = async nb => {\n    try {\n      const response = await axios.post(\"http://localhost:8080/notebooks/delete\", nb);\n      setNotebooks(response.data); // Update notebooks after deletion\n    } catch (error) {\n      console.error(\"Error deleting notebook:\", error);\n    }\n  };\n\n  // Handling swipe gestures and invoking the delete function on swipe left\n  const handleSwipe = (nbId, direction) => {\n    setSwipingState(prevState => ({\n      ...prevState,\n      [nbId]: {\n        ...prevState[nbId],\n        swiping: true,\n        swipeDirection: direction\n      }\n    }));\n\n    // If swipe is left, delete the notebook\n    if (direction === 1) {\n      const notebookToDelete = notebook.find(n => n.id === nbId);\n      if (notebookToDelete) {\n        handleDeleteNotebook(notebookToDelete);\n      }\n    }\n  };\n  if (!viewUser) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    ...props,\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        id: \"contained-modal-title-vcenter\",\n        children: \"User Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"mb-4\",\n        children: \"User's Notebooks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), notebook.length > 0 ? /*#__PURE__*/_jsxDEV(Stack, {\n        gap: 3,\n        children: _s(notebook.map(_s(nb => {\n          var _swipingState$nb$id, _swipingState$nb$id2;\n          _s();\n          // Now call useSwipeable directly within the map and attach it to each notebook card\n          const swipeHandlers = useSwipeable({\n            onSwipedLeft: () => handleSwipe(nb.id, 1),\n            // Swipe left to delete\n            onSwipedRight: () => handleSwipe(nb.id, -1),\n            // Swipe right for another action (if needed)\n            preventDefaultTouchmoveEvent: true,\n            trackMouse: true\n          });\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            ...swipeHandlers,\n            // Apply swipe handlers individually for each notebook\n            className: \"notebook-entry\",\n            \"data-notebook\": JSON.stringify(nb) // Store notebook data in a data attribute\n            ,\n            style: {\n              transform: `translateX(${((_swipingState$nb$id = swipingState[nb.id]) === null || _swipingState$nb$id === void 0 ? void 0 : _swipingState$nb$id.swipeDirection) * 100}%)`,\n              // Move each notebook individually\n              transition: (_swipingState$nb$id2 = swipingState[nb.id]) !== null && _swipingState$nb$id2 !== void 0 && _swipingState$nb$id2.swiping ? 'transform 0.3s ease' : 'none' // Smooth transition\n            },\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: \"notebook-entry shadow-sm\",\n              children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  className: \"text-primary\",\n                  children: [\"Notebook #\", nb.id]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Title:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 34\n                  }, this), \" \", nb.notebookName]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Notes:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 34\n                  }, this), \" \", nb.notes]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Resolution:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 34\n                  }, this), \" \", nb.resolution]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 19\n            }, this)\n          }, nb.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this);\n        }, \"O8mT2oUTnvPH+XFuuxstBCMJ2eE=\", false, function () {\n          return [useSwipeable];\n        })), \"O8mT2oUTnvPH+XFuuxstBCMJ2eE=\", false, function () {\n          return [useSwipeable];\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-muted\",\n        children: \"No notebooks available for this user.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: props.onHide,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s2(UserViewModal, \"kIBi+WwMkmmrQVYTgNBSKM77h64=\");\n_c = UserViewModal;\nexport default UserViewModal;\nvar _c;\n$RefreshReg$(_c, \"UserViewModal\");","map":{"version":3,"names":["useContext","useState","UserContext","Button","Modal","Card","Stack","useSwipeable","axios","jsxDEV","_jsxDEV","UserViewModal","props","_s2","_s","$RefreshSig$","viewUser","notebook","setNotebooks","swipingState","setSwipingState","handleDeleteNotebook","nb","response","post","data","error","console","handleSwipe","nbId","direction","prevState","swiping","swipeDirection","notebookToDelete","find","n","id","size","centered","children","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","className","length","gap","map","_swipingState$nb$id","_swipingState$nb$id2","swipeHandlers","onSwipedLeft","onSwipedRight","preventDefaultTouchmoveEvent","trackMouse","JSON","stringify","style","transform","transition","Text","notebookName","notes","resolution","Footer","variant","onClick","onHide","_c","$RefreshReg$"],"sources":["E:/AN3/SEM2/project-MichiMauser/frontend/src/components/modals/userViewModal.jsx"],"sourcesContent":["import { useContext, useState } from 'react';\r\nimport { UserContext } from '../../pages/Home/AdminBoard';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Stack from 'react-bootstrap/Stack';\r\nimport { useSwipeable } from 'react-swipeable'; // Importing useSwipeable hook for swipe gestures\r\n\r\nimport \"../../styles/NotebookView.css\"\r\nimport axios from 'axios';\r\n\r\nfunction UserViewModal(props) {\r\n  const { viewUser, notebook, setNotebooks } = useContext(UserContext);\r\n  const [swipingState, setSwipingState] = useState({}); // To hold the swipe state for each notebook\r\n\r\n  // Async function to handle notebook deletion\r\n  const handleDeleteNotebook = async (nb) => {\r\n    try {\r\n      const response = await axios.post(\"http://localhost:8080/notebooks/delete\", nb);\r\n      setNotebooks(response.data); // Update notebooks after deletion\r\n    } catch (error) {\r\n      console.error(\"Error deleting notebook:\", error);\r\n    }\r\n  };\r\n\r\n  // Handling swipe gestures and invoking the delete function on swipe left\r\n  const handleSwipe = (nbId, direction) => {\r\n    setSwipingState(prevState => ({\r\n      ...prevState,\r\n      [nbId]: { ...prevState[nbId], swiping: true, swipeDirection: direction }\r\n    }));\r\n\r\n    // If swipe is left, delete the notebook\r\n    if (direction === 1) {\r\n      const notebookToDelete = notebook.find(n => n.id === nbId);\r\n      if (notebookToDelete) {\r\n        handleDeleteNotebook(notebookToDelete);\r\n      }\r\n    }\r\n  };\r\n\r\n  if (!viewUser) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          User Info\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <h5 className=\"mb-4\">User's Notebooks</h5>\r\n        {notebook.length > 0 ? (\r\n          <Stack gap={3}>\r\n            {notebook.map((nb) => {\r\n              // Now call useSwipeable directly within the map and attach it to each notebook card\r\n              const swipeHandlers = useSwipeable({\r\n                onSwipedLeft: () => handleSwipe(nb.id, 1),  // Swipe left to delete\r\n                onSwipedRight: () => handleSwipe(nb.id, -1), // Swipe right for another action (if needed)\r\n                preventDefaultTouchmoveEvent: true,\r\n                trackMouse: true,\r\n              });\r\n\r\n              return (\r\n                <div\r\n                  key={nb.id}\r\n                  {...swipeHandlers}  // Apply swipe handlers individually for each notebook\r\n                  className=\"notebook-entry\"\r\n                  data-notebook={JSON.stringify(nb)} // Store notebook data in a data attribute\r\n                  style={{\r\n                    transform: `translateX(${swipingState[nb.id]?.swipeDirection * 100}%)`, // Move each notebook individually\r\n                    transition: swipingState[nb.id]?.swiping ? 'transform 0.3s ease' : 'none', // Smooth transition\r\n                  }}\r\n                >\r\n                  <Card className=\"notebook-entry shadow-sm\">\r\n                    <Card.Body>\r\n                      <Card.Title className=\"text-primary\">Notebook #{nb.id}</Card.Title>\r\n                      <Card.Text><strong>Title:</strong> {nb.notebookName}</Card.Text>\r\n                      <Card.Text><strong>Notes:</strong> {nb.notes}</Card.Text>\r\n                      <Card.Text><strong>Resolution:</strong> {nb.resolution}</Card.Text>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </div>\r\n              );\r\n            })}\r\n          </Stack>\r\n        ) : (\r\n          <p className=\"text-muted\">No notebooks available for this user.</p>\r\n        )}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={props.onHide}>Close</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default UserViewModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}